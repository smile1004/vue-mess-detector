import { beforeEach, describe, expect, it } from 'vitest'
import type { SFCScriptBlock } from '@vue/compiler-sfc'
import { BG_RESET, BG_WARN, TEXT_INFO, TEXT_RESET, TEXT_WARN } from '../asceeCodes'
import { check_RULENAME_, report_RULENAME_, reset_RULENAME_ } from './_RULENAME_CAMELCASE_'

describe('check_RULENAME_', () => {
  beforeEach(() => {
    reset_RULENAME_()
  })

  it('should not report files with /* TODO add test description */', () => {
    let script = {
      content: ` // TODO add code content to test`,
    } as SFCScriptBlock
    const fileName = '_RULENAME_CAMELCASE_.vue'
    check_RULENAME_(script, fileName)
    expect(report_RULENAME_().length).toBe(0)
    expect(report_RULENAME_()).toStrictEqual([])
  })

  it('should report files with c/* TODO add test description */', () => {
    const script = {
        content: ` // TODO add code content to test`,
    } as SFCScriptBlock
    const fileName = '_RULENAME_CAMELCASE_-problem.vue'
    check_RULENAME_(script, fileName)
    expect(report_RULENAME_().length).toBe(1)
    expect(report_RULENAME_()).toStrictEqual([{
      file: fileName,
      rule: `${TEXT_INFO}_RULESET_ ~ /* TODO Human readbale rule name */${TEXT_RESET}`,
      description: `ðŸ‘‰ ${TEXT_WARN}/* TODO tip to fix this issue */.${TEXT_RESET} See: https:///* TODO doc link */`,
      message: `line #/* TODO line number from your content above*/ ${BG_WARN}/* TODO message from the rule file */${BG_RESET} ðŸš¨`,
    }])
  })
})
